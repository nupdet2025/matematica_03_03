var gdjs;(function(n){n.PixiFiltersTools.registerFilterCreator("Godray",new class extends n.PixiFiltersTools.PixiFilterCreator{makePIXIFilter(i,r){return new PIXI.filters.GodrayFilter}updatePreRender(i,r){const e=i;e.animationSpeed!==0&&(e.time+=r.getElapsedTime()/1e3*e.animationSpeed)}updateDoubleParameter(i,r,e){const t=i;r==="lacunarity"?t.lacunarity=e:r==="angle"?t.angle=e:r==="gain"?t.gain=e:r==="light"?t.light=e:r==="x"?t.x=e:r==="y"?t.y=e:r==="animationSpeed"?t.animationSpeed=e:r==="padding"&&(t.padding=e)}getDoubleParameter(i,r){const e=i;return r==="lacunarity"?e.lacunarity:r==="angle"?e.angle:r==="gain"?e.gain:r==="light"?e.light:r==="x"?e.x:r==="y"?e.y:r==="animationSpeed"?e.animationSpeed:r==="padding"?e.padding:0}updateStringParameter(i,r,e){}updateColorParameter(i,r,e){}getColorParameter(i,r){return 0}updateBooleanParameter(i,r,e){const t=i;r==="parallel"&&(t.parallel=e)}getNetworkSyncData(i){const r=i;return{la:r.lacunarity,a:r.angle,g:r.gain,li:r.light,x:r.x,y:r.y,as:r.animationSpeed,p:r.padding,pa:r.parallel}}updateFromNetworkSyncData(i,r){const e=i;e.lacunarity=r.la,e.angle=r.a,e.gain=r.g,e.light=r.li,e.x=r.x,e.y=r.y,e.animationSpeed=r.as,e.padding=r.p,e.parallel=r.pa}})})(gdjs||(gdjs={}));
//# sourceMappingURL=godray-pixi-filter.js.map
